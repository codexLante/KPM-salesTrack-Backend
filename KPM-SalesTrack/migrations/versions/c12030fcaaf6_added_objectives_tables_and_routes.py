"""Added Objectives Tables and routes

Revision ID: c12030fcaaf6
Revises: 7b7334b5483f
Create Date: 2025-10-23 09:46:27.441092

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c12030fcaaf6'
down_revision = '7b7334b5483f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('objectives',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('target_value', sa.Integer(), nullable=False),
    sa.Column('current_value', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.alter_column('title',
               existing_type=sa.TEXT(),
               type_=sa.String(length=200),
               existing_nullable=False)
        batch_op.alter_column('description',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('due_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('assigned_to',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.drop_constraint(batch_op.f('tasks_assigned_by_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('tasks_assigned_to_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('tasks_client_id_fkey'), type_='foreignkey')
        batch_op.drop_column('client_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.add_column(sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key(batch_op.f('tasks_client_id_fkey'), 'clients', ['client_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('tasks_assigned_to_fkey'), 'users', ['assigned_to'], ['id'])
        batch_op.create_foreign_key(batch_op.f('tasks_assigned_by_fkey'), 'users', ['assigned_by'], ['id'])
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('status',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('assigned_to',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('due_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('description',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('title',
               existing_type=sa.String(length=200),
               type_=sa.TEXT(),
               existing_nullable=False)

    op.drop_table('objectives')
    # ### end Alembic commands ###
